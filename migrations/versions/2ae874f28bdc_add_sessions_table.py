"""add_sessions_table

Revision ID: 2ae874f28bdc
Revises: 773710fa0353
Create Date: 2025-08-30 02:39:10.079491

"""
from typing import Sequence, Union
import uuid

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2ae874f28bdc'
down_revision: Union[str, Sequence[str], None] = '773710fa0353'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. Создаем таблицу sessions
    op.create_table('sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_activity', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    
    # 2. Добавляем shipping_cost (может быть NULL)
    op.add_column('packages', sa.Column('shipping_cost', sa.Float(), nullable=True))
    
    # 3. Добавляем session_id как nullable сначала
    op.add_column('packages', sa.Column('session_id', sa.UUID(), nullable=True))
    
    # 4. Создаем временную сессию для существующих посылок
    connection = op.get_bind()
    result = connection.execute(sa.text("SELECT id FROM sessions LIMIT 1"))
    if not result.fetchone():
        # Создаем дефолтную сессию для существующих посылок
        default_session_id = str(uuid.uuid4())
        connection.execute(sa.text(
            "INSERT INTO sessions (id, created_at, last_activity) VALUES (:id, NOW(), NOW())"
        ), {"id": default_session_id})
        
        # Обновляем все существующие посылки
        connection.execute(sa.text(
            "UPDATE packages SET session_id = :session_id WHERE session_id IS NULL"
        ), {"session_id": default_session_id})
    
    # 5. Теперь делаем session_id NOT NULL
    op.alter_column('packages', 'session_id', nullable=False)
    
    # 6. Создаем foreign key
    op.create_foreign_key(None, 'packages', 'sessions', ['session_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'packages', type_='foreignkey')
    op.drop_column('packages', 'session_id')
    op.drop_column('packages', 'shipping_cost')
    op.drop_table('sessions')
    # ### end Alembic commands ###

from contextlib import asynccontextmanager

import uvicorn
from fastapi import FastAPI
from fastapi.routing import APIRouter

from dostavka.api.handlers import package_router
from dostavka.api.session_middleware import SessionMiddleware
from dostavka.core.logging import get_logger, setup_logging
from dostavka.db.init_db import create_tables, init_package_types
from dostavka.redis.redis_cache import cache
from dostavka.services.ship_price import fetch_usd_rub_rate

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
setup_logging()
logger = get_logger(__name__)


@asynccontextmanager
async def lifespan(app: FastAPI):
    try:
        logger.info("–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        await create_tables()
        logger.info("–¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")

        logger.info("–ù–∞—á–∏–Ω–∞—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Ç–∏–ø–æ–≤ –ø–æ—Å—ã–ª–æ–∫...")
        await init_package_types()
        logger.info("–¢–∏–ø—ã –ø–æ—Å—ã–ª–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")

        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Redis –∫–µ—à–∞...")
        try:
            await fetch_usd_rub_rate()
            logger.info("–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –∫ —Ä—É–±–ª—é –∑–∞–≥—Ä—É–∂–µ–Ω –≤ –∫–µ—à")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–∞ –≤ –∫–µ—à: {e}")
        logger.info("Redis –∫–µ—à –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        logger.info("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!")
        yield
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ lifespan: {e}", exc_info=True)
        raise
    finally:
        logger.info("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ lifespan")
        await cache.close()




app = FastAPI(
    title="Dostavka API",
    description="""
    ## üöö API –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ—Å—ã–ª–æ–∫
    
    ### –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    - **–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å—ã–ª–æ–∫** —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Ä–∞—Å—á–µ—Ç–æ–º —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
    - **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—ã–ª–∫–∞–º–∏** —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
    - **–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞** —á–µ—Ä–µ–∑ Celery –∏ RabbitMQ
    - **–ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç** –≤ Redis
    
    ### –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:
    - **FastAPI** - –≤–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫
    - **PostgreSQL** - –æ—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    - **Redis** - –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
    - **RabbitMQ** - –æ—á–µ—Ä–µ–¥—å —Å–æ–æ–±—â–µ–Ω–∏–π
    - **Celery** - –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
    
    ### –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–µ—Å–∞ –∏ —Ü–µ–Ω—ã
    - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –∫—É—Ä—Å–∞ USD/RUB –æ—Ç –¶–ë –†–§
    - –ü–∞–≥–∏–Ω–∞—Ü–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–ª—è —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –±–æ–ª—å—à–∏–º–∏ –æ–±—ä–µ–º–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
    """,
    lifespan=lifespan
)

app.add_middleware(SessionMiddleware)
main_api_router = APIRouter()
main_api_router.include_router(package_router, prefix="/packages", tags=["–ü–æ—Å—ã–ª–∫–∏"])
app.include_router(main_api_router)

if __name__=="__main__":
    uvicorn.run(app, host='localhost', port=8000)
